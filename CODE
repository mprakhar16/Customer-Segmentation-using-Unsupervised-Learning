import numpy as np      # for making arrays
import pandas as pd     # for making dataframes
import matplotlib.pyplot as plt     # for data visualisation
import seaborn as sns               # for data visualisation
from sklearn.cluster import KMeans     # for importing k-means clustering algo


#loading the dataframe from csv file to a panda dataframe
customer_data = pd.read_csv("Mall_Customers.csv")


# first five rows in the dataframe
customer_data.head()


#finding rowsand columns of the dataset
customer_data.shape


# getting some info about the datset
customer_data.info()


#checking for missing values
customer_data.isnull().sum()


X = customer_data.iloc[:,[3,4]].values           #to locate specific collumns


# Finding WCSS value for different number of clusters which are required
WCSS = []
for i in range(1,11):
  kmeans = KMeans(n_clusters=i, init = 'k-means++', random_state=10)
  kmeans.fit(X)
  WCSS.append(kmeans.inertia_)         # gives us the WCSS value


# plotting an elbow graph

sns.set()
plt.plot(range(1,11), WCSS)
plt.title('The Elbow Point Graph')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.show()


kmeans = KMeans(n_clusters=5, init='k-means++', random_state=0)

# return a label for each data point based on the cluster
Y = kmeans.fit_predict(X)
print(Y)


# plotting all the clusters and their centroid

plt.figure(figsize=(10,10))
plt.scatter(X[Y==0,0], X[Y==0,1], s=30, c='green', label='Cluster 1')
plt.scatter(X[Y==1,0], X[Y==1,1], s=30, c='red', label='Cluster 2')
plt.scatter(X[Y==2,0], X[Y==2,1], s=30, c='violet', label='Cluster 3')
plt.scatter(X[Y==3,0], X[Y==3,1], s=30, c='blue', label='Cluster 4')
plt.scatter(X[Y==4,0], X[Y==4,1], s=30, c='black', label='Cluster 5')

# plot the centroids
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s=50, c='cyan', label='Centroids')
plt.title('Customer Groups')
plt.xlabel("Annual Income")
plt.ylabel('Spending Score')
plt.show()


